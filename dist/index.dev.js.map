{"version":3,"sources":["index.js"],"names":["express","require","path","fs","sharp","app","PORT","set","join","__dirname","console","log","process","cwd","__filename","obGlobal","obErori","vectorFoldere","folder","folderCaleAbsoluta","existsSync","mkdirSync","use","get","_req","res","sendFile","req","render","ip","afisareEroare","pagina","url","filePath","err","rezRandare","send","initErori","continut","readFileSync","JSON","parse","eroare_default","imagine","info_erori","eroare","error","identificator","titlu","text","find","e","imaginePath","split","pop","status","listen"],"mappings":"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","sourcesContent":["const express = require(\"express\");\r\nconst path = require(\"path\");\r\nconst fs = require(\"fs\");\r\nconst sharp = require(\"sharp\");\r\n\r\n\r\nconst app = express();\r\nconst PORT = 8080;\r\n\r\napp.set(\"view engine\", \"ejs\");\r\napp.set(\"views\", path.join(__dirname, \"views\"));\r\n\r\nconsole.log(\"Folder index.js:\", __dirname);\r\nconsole.log(\"Folder curent (de lucru):\", process.cwd());\r\nconsole.log(\"Cale fișier:\", __filename);\r\n\r\n// Obiect global pentru gestionarea erorilor\r\nlet obGlobal = { obErori: null };\r\n\r\n// Crearea folderelor necesare\r\nconst vectorFoldere = [\"temp\", \"poze_uploadate\", \"backup\", \"temp1\"];\r\nfor (const folder of vectorFoldere) {\r\n    const folderCaleAbsoluta = path.join(__dirname, folder);\r\n    if (!fs.existsSync(folderCaleAbsoluta)) {\r\n        fs.mkdirSync(folderCaleAbsoluta);\r\n    }\r\n}\r\n\r\n// Servirea fișierelor statice\r\napp.use(\"/resurse\", express.static(path.join(__dirname, \"resurse\")));\r\n\r\n\r\n// Ruta corectă pentru favicon.ico\r\napp.get(\"/favicon.ico\", (_req, res) => {\r\n    res.sendFile(path.join(__dirname, \"resurse/imagini/ico/favicon.ico\"));\r\n});\r\n\r\n// Permite accesul la pagina principală de pe mai multe rute\r\napp.get([\"/\", \"/index\", \"/home\"], (req, res) => {\r\n    res.render(\"pagini/index\", { ip: req.ip });\r\n});\r\n\r\n// Blocare acces direct la resurse fără fișier specificat\r\napp.get(/^\\/resurse\\/[a-z0-9A-Z/_-]+$/i, (_req, res) => {\r\n    afisareEroare(res, 403);\r\n});\r\n\r\n// Interzicere acces fișiere `.ejs`\r\napp.get(\"/*.ejs\", (_req, res) => {\r\n    afisareEroare(res, 400);\r\n});\r\n\r\n// Rută pentru orice altceva (pagini dinamice)\r\napp.get(\"/*\", (req, res) => {\r\n    const pagina = req.url;\r\n    const filePath = path.join(__dirname, \"views\", \"pagini\", pagina + \".ejs\");\r\n\r\n    if (!fs.existsSync(filePath)) {\r\n        return afisareEroare(res, 404, \"Pagina negăsită\", \"Verificați calea URL-ului\");\r\n    }\r\n\r\n    res.render(\"pagini\" + pagina, (err, rezRandare) => {\r\n        if (err) {\r\n            return afisareEroare(res, 404, \"Pagina negăsită\", \"Verificați calea URL-ului\");\r\n        }\r\n        res.send(rezRandare);\r\n    });\r\n});\r\n\r\n// Inițializare erori\r\ninitErori()\r\n\r\nfunction initErori() {\r\n    try {\r\n        const continut = fs.readFileSync(path.join(__dirname, \"resurse/json/erori.json\"), \"utf-8\");\r\n        obGlobal.obErori = JSON.parse(continut);\r\n\r\n        obGlobal.obErori.eroare_default.imagine = \"/resurse/imagini/erori/\" + obGlobal.obErori.eroare_default.imagine;\r\n\r\n        for (let eroare of obGlobal.obErori.info_erori) {\r\n            eroare.imagine = \"/resurse/imagini/erori/\" + eroare.imagine;\r\n        }\r\n    } catch (err) {\r\n        console.error(\"Eroare la citirea fișierului erori.json:\", err);\r\n    }\r\n}\r\n\r\n// Funcție pentru afișarea erorilor\r\nfunction afisareEroare(res, identificator, titlu, text, imagine) {\r\n    let eroare = obGlobal.obErori.info_erori.find(e => e.identificator === identificator) || obGlobal.obErori.eroare_default;\r\n\r\n    // Verifică dacă imaginea există, altfel folosește una default\r\n    const imaginePath = path.join(__dirname, \"resurse/imagini/erori\", eroare.imagine.split(\"/\").pop());\r\n    if (!fs.existsSync(imaginePath)) {\r\n        eroare.imagine = \"/resurse/imagini/erori/interzis.png\"; // Imagine default\r\n    }\r\n\r\n    res.status(eroare.status ? identificator : 400).render(\"pagini/eroare\", {\r\n        titlu: titlu || eroare.titlu,\r\n        text: text || eroare.text,\r\n        imagine: eroare.imagine\r\n    });\r\n}\r\n\r\n// Pornire server\r\napp.listen(PORT, () => {\r\n    console.log(`Serverul rulează la http://localhost:${PORT}`);\r\n});\r\n"],"file":"index.dev.js"}